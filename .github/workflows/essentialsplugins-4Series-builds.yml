name: Essentials Plugin Build 4-Series

on:
  workflow_call:
    inputs:
      newVersion:
        description: 'new version?'
        required: true
        type: string
      version:
        description: 'The version of the file to build and push'
        required: true
        type: string
      tag:
        description: 'The tag of the image to build and push'
        required: true
        type: string
      channel:
        description: 'The channel of the image to build and push'
        required: true
        type: string 
      
env:
  BUILD_TYPE: ${{ inputs.channel == '' && 'Release' || 'Debug' }}
jobs:
  Build_Project_4-Series:
    runs-on: windows-latest
    steps:
      # First we checkout the source repo
      - name: Checkout repo
        uses: actions/checkout@v4     
      - name: Get SLN Info
        id: get_sln_info
        shell: powershell
        run: |
          $solution_file = Get-ChildItem .\*.4Series.sln -recurse
          Write-Output $solution_file
          echo "SOLUTION_FILE=$($solution_file.BaseName)"| Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

          $solution_path = Get-ChildItem *.4Series.sln -recurse 
          $solution_path = $solution_path.FullName
          $solution_path = $solution_path -replace "(?:[^\\]*\\){4}", ""
          Write-Output $solution_path
          echo "SOLUTION_PATH=$($solution_path)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append          
      - name: Setup MS Build
        uses: microsoft/setup-msbuild@v1.1
      - name: restore Nuget Packages
        run: nuget restore .\${{ steps.get_sln_info.outputs.SOLUTION_FILE }}.sln
      - name: Build Solution        
        run: msbuild .\${{ steps.get_sln_info.outputs.SOLUTION_FILE }}.sln /p:Platform="Any CPU" /p:Configuration="$($ENV:BUILD_TYPE)" /p:Version="${{ inputs.version }}" /p:IncludeSourceRevisionInInformationalVersion=false -m   
      - name: Get release notes
        uses: actions/download-artifact@v4
        with:
          name: change-log
      - name: Upload Release
        if: ${{ inputs.newVersion == 'true' }}
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'output\**\*.*(cpz|cplz)'          
          prerelease: ${{ inputs.channel != '' }}
          tag: ${{ inputs.tag }}
          commit: ${{ github.sha }}
          bodyFile: ./CHANGELOG.md
      - name: Remove Existing Nuspec Files
        run: |
          Get-ChildItem -Path .\ -Filter *.nuspec -Recurse | Remove-Item -Force
          - name: Create Nuspec File
            shell: powershell
            run: |
              $year = (Get-Date).Year
              $repoFullName = "${{ github.repository }}" # Full repository name, including owner
              $repoName = $repoFullName.Split('/')[-1] # Extracting the repository name part
              $makeModelParts = $repoName -split '-'
              $makeModel = $makeModelParts[1..($makeModelParts.Length - 1)] -join ' ' # Joining all parts after the first dash
              $title = (Get-Culture).TextInfo.ToTitleCase($makeModel)
              $makeModel = $title -replace ' ', '' # Removing spaces for the ID
              $id = "PepperDash.Essentials.Plugin." + $makeModel
              $nuspecContent = @"
              <?xml version='1.0' encoding='utf-8'?>
              <package>
                <metadata>
                  <id>$id</id>
                  <version>${{ inputs.version }}</version>
                  <title>$title</title>
                  <authors>PepperDash Technologies</authors>
                  <owners>pepperdash</owners>
                  <requireLicenseAcceptance>false</requireLicenseAcceptance>
              <license type='expression'>MIT</license>
              <projectUrl>https://github.com/${{ github.repository }}</projectUrl>
              <copyright>Copyright $year</copyright>
              <description>${{ github.repository_name }} Epi</description>
              <tags>crestron 3series 4series</tags>
              <repository type='git' url='https://github.com/${{ github.repository }}'/>
            </metadata>
            <files>
              <file src='**' target='lib\net35'/>
              <file src='**' target='lib\net47'/>
            </files>
          </package>
          "@
          echo $nuspecContent > ${{ github.workspace }}\project.nuspec
      - name: Setup Nuget
        run: | 
          nuget sources add -name github -source https://nuget.pkg.github.com/pepperdash/index.json -username pepperdash -password ${{ secrets.GITHUB_TOKEN }}
          nuget setApiKey ${{ secrets.GITHUB_TOKEN }} -Source github          
          nuget setApiKey ${{ secrets.NUGET_API_KEY }} -Source https://api.nuget.org/v3/index.json          
      - name: Publish to Nuget
        run: nuget push .\output\*.nupkg -Source https://api.nuget.org/v3/index.json
      - name: Publish to Github Nuget
        run: nuget push .\output\*.nupkg -Source github -ApiKey ${{secrets.GITHUB_TOKEN }}
