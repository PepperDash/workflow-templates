name: Essentials Plugin Build Get Version

on:
  workflow_call:
    outputs:
      version:
        description: 'The version of the workflow'
        value: ${{ jobs.get_version.outputs.version }}
      tag:
        description: 'The tag of the workflow'
        value: ${{ jobs.get_version.outputs.tag }}
      newVersion:
        description: 'Was a new version generated?'
        value: ${{ jobs.get_version.outputs.newVersion }}
      channel:
        description: 'The channel of the workflow'
        value: ${{ jobs.get_version.outputs.channel }}
jobs:
  GetVersionNumber:
    runs-on: ubuntu-latest
    outputs:
      newVersion: ${{ steps.get_version.outputs.newVersion }}
      tag: ${{ steps.get_version.outputs.tag }}
      version: ${{ steps.get_version.outputs.version }}
      channel: ${{ steps.get_version.outputs.channel }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Get branch name
      id: get_branch
      run: |
        branch=${GITHUB_REF#refs/heads/}
        echo "branch=$branch" >> $GITHUB_OUTPUT
        echo "prerelease=${branch//\//-}" >> $GITHUB_OUTPUT
      env:
        GITHUB_REF: ${{ github.ref }}
    - name: Replace branch name in .releaserc.json
      if: steps.get_branch.outputs.branch != 'main'
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: 'replace-me-feature-branch'
        replace: '${{ steps.get_branch.outputs.branch }}'
        include: '.releaserc.json'
    - name: Replace prerelease name in .releaserc.json
      if: steps.get_branch.outputs.branch != 'main'
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: 'replace-me-prerelease'
        replace: '${{ steps.get_branch.outputs.prerelease }}'
        include: '.releaserc.json'
    - name: Get version number
      id: get_version
      run: npx --package=semantic-release --package=@semantic-release/commit-analyzer --package=@semantic-release/release-notes-generator --package=@semantic-release/changelog --package=@semantic-release/exec -- semantic-release
    - name: Print summary if no new version
      if: steps.get_version.outputs.newVersion != 'true'
      run: |          
        echo "# Summary" >> $GITHUB_STEP_SUMMARY
        echo "No new version generated" >> $GITHUB_STEP_SUMMARY
    - name: Upload release notes
      if: steps.get_version.outputs.newVersion == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: change-log
        path: CHANGELOG.md
    - name: Upload Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true 
        prerelease: ${{ steps.get_version.outputs.channel != '' }}
        tag: ${{ steps.get_version.outputs.tag }}
        commit: ${{ github.sha }}
        bodyFile: ./CHANGELOG.md
    - name: Print results
      if: steps.get_version.outputs.newVersion == 'true'
      run: |
        echo "# Summary" >> $GITHUB_STEP_SUMMARY        
        echo "Version: ${{ steps.get_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "Tag: ${{ steps.get_version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "New Version: ${{ steps.get_version.outputs.newVersion }}" >> $GITHUB_STEP_SUMMARY
        echo "Channel: ${{ steps.get_version.outputs.channel }}" >> $GITHUB_STEP_SUMMARY
        echo "Type: ${{ steps.get_version.outputs.type }}" >> $GITHUB_STEP_SUMMARY