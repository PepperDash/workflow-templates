name: Essentials Plugin Build 4-Series

on:
  workflow_call:
    inputs:
      newVersion:
        description: 'new version?'
        required: true
        type: string
      version:
        description: 'The version of the file to build and push'
        required: true
        type: string
      tag:
        description: 'The tag of the image to build and push'
        required: true
        type: string
      channel:
        description: 'The channel of the image to build and push'
        required: true
        type: string 
      
env:
  # solution path needs slashes (use \). When solution file name and path are put together, it should be a valid path
  # If Solution is in repo root, leave SOLUTION_PATH empty
  # solution name does not include extension. .sln is assumed
  SOLUTION_PATH: 3-series\
  SOLUTION_FILE: epi-essentials-mobile-control
  # Do not edit this, we're just creating it here
  VERSION: 0.0.0-buildtype-buildnumber
  # Defaults to debug for build type
  BUILD_TYPE: Release
  # Defaults to master as the release branch.  Change as necessary
  RELEASE_BRANCH: main
jobs:
  Build_Project_4-Series:
    runs-on: windows-latest
    steps:
      # First we checkout the source repo
      - name: Checkout repo
        uses: actions/checkout@v4     
      - name: Get SLN Info
        id: get_sln_info
        shell: powershell
        run: |
          $solution_file = Get-ChildItem .\*.4Series.sln -recurse
          Write-Output $solution_file
          echo "SOLUTION_FILE=$($solution_file.BaseName)"| Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

          $solution_path = Get-ChildItem *.4Series.sln -recurse 
          $solution_path = $solution_path.FullName
          $solution_path = $solution_path -replace "(?:[^\\]*\\){4}", ""
          Write-Output $solution_path
          echo "SOLUTION_PATH=$($solution_path)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append          
      - name: Setup MS Build
        uses: microsoft/setup-msbuild@v1.1
      - name: restore Nuget Packages
        run: nuget restore .\4-series\${{ steps.get_sln_info.outputs.SOLUTION_FILE }}.sln
      - name: Build Solution        
        run: msbuild .\4-series\${{ steps.get_sln_info.outputs.SOLUTION_FILE }}.sln /p:Platform="Any CPU" /p:Configuration="Debug" /p:Version="${{ inputs.version }}" -m   
      - name: Get release notes
        uses: actions/download-artifact@v3
        with:
          name: change-log
      - name: Upload Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'output\*.*(cpz|cplz)'      
          prerelease: ${{ needs.GetVersionNumber.outputs.channel != '' }}
          tag: ${{ needs.GetVersionNumber.outputs.tag }}
          commit: ${{ github.sha }}
          bodyFile: ./CHANGELOG.md
      - name: Setup Nuget
        run: | 
          nuget sources add -name github -source https://nuget.pkg.github.com/pepperdash/index.json -username pepperdash -password ${{ secrets.GITHUB_TOKEN }}
          nuget setApiKey ${{ secrets.GITHUB_TOKEN }} -Source github          
          nuget setApiKey ${{ secrets.NUGET_API_KEY }} -Source https://api.nuget.org/v3/index.json          
      - name: Publish to Nuget
        run: nuget push .\output\*.nupkg -Source https://api.nuget.org/v3/index.json
      - name: Publish to Github Nuget
        run: nuget push .\output\*.nupkg -Source github
